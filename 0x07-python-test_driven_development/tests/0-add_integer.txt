=====================The ''0-add_integer'' module================
=================================================================
Using ''add_integer''

--------------------

Import the function:

	>>> add_integer = __import__('0-add_integer').add_integer

Let's test the function with all possible scenarios:

Adding 2 integer numbers:

	>>> add_integer(3, 5)
	8

	>>> add_integer(-2, 7)
	5

Adding an integer and a float:

	>>> add_integer(4, 9.3)
	13

	>>> add_integer(10.5, 6)
	16

Adding two floats:

	>>> add_integer(4.5, 9.3)
	13

Adding an integer and using the default b value:

	>>> add_integer(9)
	107

Adding two negative integers:

	>>> add_integer(-25, -47)
	-72

Handle the errors:

	Try to add a as a string:

        >>> add_integer("Hello", 15)
        Traceback (most recent call last):
        TypeError: a must be an integer

	Try to add b as a string:

	>>> add_integer(1, "Hey")
	Traceback (most recent call last):
	TypeError: b must be an integer

	Try to add a None value:

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

	Call the function without arguments:

	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'

	Try to add a very large number:

	>>> add_integer(3.14e9874)
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

	Try to add a Not_a_Number value:

	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to an integer
